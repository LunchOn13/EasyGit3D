git status [<options>…​] [--] [<pathspec>…​]

$ git status -s
-짧게 나옴
$ git status -s --short
--output 같음--

$ git status -b
$ git status -b --branch
-분기 정보 표시
$ git status -b --show-stash
-숨김 정보 표시
$ git status -b --ahead-behind 
-전체 앞/뒤 값 계산
$ git status -b --long
-긴 형식으로 상태 표시
-- 전부 같은거 같음 더 자세히 살펴봐야함--

$ git status -v
$ git status -v --verbose
긴 형식으로 상태 표시( 파일의 수정사항등 )

$ git status -u --untracked-files[=<mode>]
-추적되지 않은 파일을 표시합니다. 추적되지 않은 파일 표시 (modes: all, normal, no)
$ git status -u --ignored[=<mode>] 
-무시된 파일 표시(modes: traditional, matching, no)
$ git status -u --ignore-submodules[=<when>]
-하위 모듈에 대한 변경 사항을 무시 하고 (all, dirty, untracked)같은 경우 선택 사항입니다.
$ git status -u --column[=<style>] 
-열에 추적되지 않은 파일을 나열
$ git status -u --no-renames 
-이름 바꿈은 감지하지 않음

$ git status -M --find-renames[=<n>]
-이름 바뀜 감지, 선택적으로 유사성 인덱스 설정
$ git status -M --show-ignored-directory
-비추천 이름과 일치하는 디렉토리만 표시
$ git status -M --no-lock-index
-비추천 

$ git status -z 
-한줄로 변경 파일들 보여줌


괜츄
$ git status -s
 M KJM_Flie/Testing1/Testing1/Program.cs
?? KJM_Flie/test_T.txt

M = 수정
T = 변경된 파일 유형
A = 추가
D = 삭제
R = 이름 변경
C = 복사됨
U = 업데이트되었지만 병합되지 않음
?? = 추적되지 않은


$ git log --pretty=format:"%cn %cd %s"
jeong-mo Fri Apr 1 23:00:32 2022 +0900 creat_new_file

----
%H: 커밋 해시
%h: 짧은 길이 커밋 해시
%T: 트리 해시
%t: 짧은 길이 트리 해시
%P: 부모 해시
%p: 짧은 길이 부모 해시
%an: 저자 이름
%ae: 저자 메일
%ad: 저자 시각 (형식은 –date= 옵션 참고)
%ar: 저자 상대적 시각
%cn: 커미터 이름
%ce: 커미터 메일
%cd: 커미터 시각
%cr: 커미터 상대적 시각
%s: 요약








https://kin3303.tistory.com/294

https://git-scm.com/docs/git-status
